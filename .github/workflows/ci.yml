name: CI
on:
  pull_request:
    branches:
      - main
      - dev
  push:
    branches:
      - main
    tags: '*'

permissions:
  actions: write
  contents: read

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.osarch.os }} - ${{ matrix.osarch.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.osarch.os }}
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10' #lower compat bound
          - '1.11' #change in init behavior
          - '1.12' #binding partitions with world-age semantics
          - '1' # latest version 1
          - 'nightly' #look ahead a bit
        osarch: # only the right combinations of OS
          - os: ubuntu-latest
            arch: x64
          - os: ubuntu-latest
            arch: x86
          - os: windows-latest
            arch: x64
          - os: windows-latest
            arch: x86
          - os: macOS-latest
            arch: aarch64

    steps:
      - uses: actions/checkout@v5
      - uses: julia-actions/setup-julia@v2
        with:
          show-versioninfo: true
          version: ${{ matrix.version }}
          arch: ${{ matrix.osarch.arch }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          files: lcov.info

#   docs:
#     name: Documentation
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       pages: write
#       id-token: write
#     steps:
#       - uses: actions/checkout@v5
#       - uses: julia-actions/setup-julia@v2
#         with:
#           version: '1'
#       - uses: julia-actions/cache@v2
#       - run: |
#           julia --project=docs -e '
#             using Pkg
#             Pkg.develop(PackageSpec(path=pwd()))
#             Pkg.instantiate()'
#       - run: |
#           julia --project=docs -e '
#             using Documenter: doctest
#             using PackageStates
#             doctest(PackageStates)'
#       - run: julia --project=docs docs/make.jl
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
